use database_1;
show tables;
-- write a SQL query to find all the orders issued by the salesman 'Paul Adam'. 
-- Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

select o.ord_no,o.purch_amt,o.ord_date,o.customer_id,s.salesman_id
from orders o
join salesman s
on s.salesman_id=o.salesman_id
where s.name='paul adam';

select * from orders where salesman_id=(select salesman_id from salesman where name='paul adam');

-- write a SQL query to find all orders generated by London-based salespeople. 
-- Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

select * from orders
where salesman_id =(select salesman_id from salesman where city='london');


-- write a SQL query to find all orders generated by the salespeople 
-- who may work for customers whose id is 3007. 
-- Return ord_no, purch_amt, ord_date, customer_id, salesman_id.
select * from orders 
where salesman_id=
              (select distinct salesman_id from orders where customer_id=3007);
              
-- write a SQL query to find the order values 
-- greater than the average order value of 10th October 2012. 
-- Return ord_no, purch_amt, ord_date, customer_id, salesman_id.

select * from orders 
where purch_amt>(
            select avg(purch_amt)
            from orders where ord_date = '2012-10-10');
            

-- write a SQL query to find all the orders generated in New York city. 
-- Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

select * from orders o
join salesman s
on o.salesman_id=s.salesman_id
where s.city='New York';

-- write a SQL query to determine the commission of the salespeople in Paris. 
-- Return commission.

select commission from salesman s
where city=(select city from customer where city='paris');

-- Write a query to display all the customers whose ID is 2001 
-- below the salesperson ID of Mc Lyon.

select  * from customer
where customer_id=(select salesman_id - 2001 from salesman where name='Mc lyon');

-- write a SQL query to count the number of customers with 
-- grades above the average in New York City. 
-- Return grade and count.

select count(*) as count,grade from customer 
where grade > (select avg(grade) from customer where city = 'new york') group by grade;

--  write a SQL query to find those salespeople who earned the maximum commission.
--  Return ord_no, purch_amt, ord_date, and salesman_id.

select * from orders
where salesman_id in (select salesman_id from salesman where commission = 
                     (select max(commission) from salesman));

select * from orders o
join salesman s 
on o.salesman_id=s.salesman_id
where s.commission = (select max(commission) from salesman);


-- write SQL query to find the customers who placed orders on 17th August 2012. 
-- Return ord_no, purch_amt, ord_date, customer_id, salesman_id and cust_name.

select o.*,cust_name from orders o, customer c
where o.customer_id=c.customer_id and o.ord_date='2012-08-17';

-- write a SQL query to find salespeople who had more than one customer. 
-- Return salesman_id and name.

select salesman_id,name
from salesman a
where (select count(*) from customer where salesman_id = a.salesman_id)>1;

-- write a SQL query to find those orders, which are higher than the
-- average amount of the orders. 
-- Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

select * from orders 
where purch_amt > (select avg(purch_amt) from orders);


-- write a SQL query to find salespeople who deal with a single customer.
--  Return salesman_id, name, city and commission.

select * from salesman a
where salesman_id in (select distinct salesman_id from customer b where exists (select * from customer c where c.salesman_id=b.salesman_id and c.cust_name != b.cust_name));

-- write a SQL query to find the salespeople who deal with those customers who live in the same city. 
-- Return salesman_id, name, city and commission.

select distinct s.salesman_id,s.name,s.city,s.commission from salesman s
join customer c on s.salesman_id=c.salesman_id
where s.city=c.city;
-- write a SQL query to find all those salespeople whose names appear alphabetically lower than the customerâ€™s name. 
-- Return salesman_id, name, city, commission.

select * from salesman s
where exists (select cust_name from customer c where s.name<c.cust_name);

-- write a SQL query to find all those orders whose order amount exceeds at least one of the orders placed on September 10th 2012. 
-- Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

select * from orders o
where exists (select ord_date,purch_amt from orders b where o.purch_amt>b.purch_amt and b.ord_date='2012-09-10');

-- write a SQL query to find orders where the order amount is less than the order amount of a customer residing in London City. 
-- Return ord_no, purch_amt, ord_date, customer_id and salesman_id.

select *
from orders
where purch_amt<any (select purch_amt from orders a,customer b where a.customer_id = b.customer_id and b.city = 'london');

